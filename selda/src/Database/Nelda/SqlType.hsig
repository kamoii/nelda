{-# OPTIONS_GHC -fno-warn-orphans #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE AllowAmbiguousTypes #-}

signature Database.Nelda.SqlType
    ( module Database.Nelda.Backend.Types
    , module Database.Nelda.SqlTypeClass
    , module Database.Nelda.SqlTypeRep
    ) where

import Database.Nelda.Backend.Types
import Database.Nelda.SqlTypeClass
import Database.Nelda.SqlTypeRep
import Data.Text (Text)

-- このモジュールでは

{-
微妙なところ。
例えば SQLite はカラム定義として Bool はないが, Int の 1/0 が true/false として扱われている。
selda は SQL構築する際に Col s Bool を使っており, SqlType Bool がないと Database.Selda モジュールのコンパイルが通らない。
厳密に言うと カラムが取れる型と SQL中の型は一致しない。
ただ厳密にやりすぎると ergnomics が下がるため取りあえず以下のものはどのバックエンドも最低限の要求とする。
-}
instance SqlType Int
instance SqlType Text
instance SqlType Double
instance SqlType Bool
